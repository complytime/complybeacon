# To limit exposure to denial-of-service attacks, change the host in endpoints below from 0.0.0.0 to a specific network interface.
# See https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks

receivers:
  webhookevent:
    endpoint: 0.0.0.0:8089
    read_timeout: "500ms"
    path: "/eventsource/receiver"
    health_path: "/eventreceiver/healthcheck"
    split_logs_at_newline: false
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4319
processors:
  batch:
  transform/conforma:
    error_mode: ignore
    log_statements:
      - context: log
        conditions:
          - body != nil and Substring(body, 0, 2) == "{\""
        statements:
          - merge_maps(cache, ParseJSON(body), "upsert")
          - set(attributes["class_uid"], 6007)
          - set(attributes["category_uid"], 6)
          - set(attributes["category_name"], "Application Activity")
          - set(attributes["class_name"], "Scan Activity")
          - set(attributes["type_uid"], 60070)
          - set(attributes["action"], "observed")
          - set(attributes["action_id"], 3)
          - set(attributes["status"], "success") where cache["success"] == true
          - set(attributes["status_id"], 1) where cache["success"] == true
          - set(attributes["status"], "failure") where cache["success"] == false
          - set(attributes["status_id"], 2) where cache["success"] == false
          - set(attributes["metadata"], {})
          - set(attributes["metadata"]["uid"], UUID())
          - set(attributes["metadata"]["product"], {})
          - set(attributes["metadata"]["product"]["name"], "conforma")
          - set(attributes["metadata"]["product"]["vendor_name"], "conforma")
          - set(attributes["metadata"]["product"]["version"], "conforma")
          - set(attributes["metadata"]["product"]["log_provider"], "conforma")
          - set(attributes["policy"]["uid"], cache["policy"]["name"])
          - set(attributes["time"], cache["effective-time"])
          - set(observed_time, Now()) where log.observed_time_unix_nano == 0
          - set(time, observed_time) where log.time_unix_nano == 0
          - flatten(attributes, "")
          # Custom required attributes for truth beam
          - set(attributes["evidence.id"], attributes["metadata.uid"])
          - set(attributes["policy.id"], attributes["policy.uid"])
          - set(attributes["policy.decision"], attributes["status"])
          - set(attributes["policy.source"], attributes["metadata.product.name"])
          - set(attributes["category.id"], attributes["category_uid"])
          - set(attributes["class.id"], attributes["class_uid"])
exporters:
  debug:
    verbosity: detailed
  otlp:
    endpoint: "collector:4317"
    tls:
      insecure: true

service:
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp ]
    metrics:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp ]
    logs:
      receivers: [ webhookevent ]
      processors: [ batch, transform/conforma ]
      exporters: [ debug, otlp ]
