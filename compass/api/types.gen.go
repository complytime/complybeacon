// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"encoding/json"
	"time"
)

// Defines values for AssetCriticality.
const (
	Development     AssetCriticality = "development"
	MissionCritical AssetCriticality = "mission_critical"
	Production      AssetCriticality = "production"
	Sandbox         AssetCriticality = "sandbox"
	Staging         AssetCriticality = "staging"
)

// Defines values for Result.
const (
	Failed      Result = "Failed"
	NeedsReview Result = "Needs Review"
	Passed      Result = "Passed"
)

// Defines values for RiskLevel.
const (
	Critical RiskLevel = "critical"
	High     RiskLevel = "high"
	Low      RiskLevel = "low"
	Medium   RiskLevel = "medium"
)

// AssetCriticality The business criticality of the affected asset.
type AssetCriticality string

// Baseline Baselines impacted by policy.
type Baseline struct {
	// Id Baseline identifier (e.g., OpenSSF, PCI DSS).
	Id           string   `json:"id"`
	Requirements []string `json:"requirements"`
}

// EnrichmentRequest defines model for EnrichmentRequest.
type EnrichmentRequest struct {
	Evidence RawEvidence `json:"evidence"`

	// Summary A summary of the conformance assertion.
	Summary *string `json:"summary,omitempty"`
}

// EnrichmentResponse Enriched compliance finding with risk attributes and threat mappings.
type EnrichmentResponse struct {
	// Asset Attributes providing business context for the affected asset.
	Asset struct {
		// BusinessUnit The business unit that owns the asset (e.g., finance, marketing).
		BusinessUnit *string `json:"businessUnit,omitempty"`

		// Criticality The business criticality of the affected asset.
		Criticality *AssetCriticality `json:"criticality,omitempty"`

		// DataSensitivity The type of sensitive data at risk (e.g., PII, PHI).
		DataSensitivity *string `json:"dataSensitivity,omitempty"`
	} `json:"asset"`
	ImpactedBaselines []Baseline `json:"impactedBaselines"`

	// Result The possible outcomes of an evaluation or assessment.
	Result Result `json:"result"`

	// RiskAssessment Attributes from the Gemara logical model that quantify risk.
	RiskAssessment struct {
		// FindingType The type of compliance finding (e.g., policy_violation, misconfiguration).
		FindingType *string `json:"findingType,omitempty"`

		// OverallRiskScore A calculated, quantitative score for the overall risk (e.g., 8.2).
		OverallRiskScore *float32 `json:"overallRiskScore,omitempty"`

		// RiskLevel A categorical tag for the risk level, based on the overall risk score.
		RiskLevel *RiskLevel `json:"riskLevel,omitempty"`

		// Threat A detailed threat object from the Gemara logical model.
		Threat *Threat `json:"threat,omitempty"`
	} `json:"riskAssessment"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`
}

// RawEvidence defines model for RawEvidence.
type RawEvidence struct {
	// Decision The decision made by the policy engine (e.g., "compliant", "non-compliant").
	Decision string `json:"decision"`

	// Details Raw JSON output from the policy engine.
	Details json.RawMessage `json:"details"`

	// Id Unique identifier for the raw evidence.
	Id string `json:"id"`

	// PolicyId The ID of the policy that generated the evidence.
	PolicyId string   `json:"policyId"`
	Resource Resource `json:"resource"`

	// Source The source of the raw evidence (e.g., policy engine name).
	Source string `json:"source"`

	// Timestamp The time when the raw evidence was generated.
	Timestamp time.Time `json:"timestamp"`
}

// Resource defines model for Resource.
type Resource struct {
	// Name The name of the resource.
	Name string `json:"name"`

	// Uri Location of the resource
	Uri string `json:"uri"`
}

// Result The possible outcomes of an evaluation or assessment.
type Result string

// RiskLevel A categorical tag for the risk level, based on the overall risk score.
type RiskLevel string

// Threat A detailed threat object from the Gemara logical model.
type Threat struct {
	// Description A detailed description of the threat.
	Description *string `json:"description,omitempty"`

	// Id A unique identifier for the threat (e.g., CCC.TH01).
	Id            string           `json:"id"`
	MitreMappings *[]ThreatMapping `json:"mitreMappings,omitempty"`

	// Title A human-readable title for the threat (e.g., Access Control is Misconfigured).
	Title string `json:"title"`
}

// ThreatIdentifier A specific threat technique or sub-technique.
type ThreatIdentifier struct {
	// Id The MITRE ID (e.g., T1059.004).
	Id string `json:"id"`

	// Name The name of the technique.
	Name string `json:"name"`

	// Url The URL to the technique's page for more information.
	Url string `json:"url"`
}

// ThreatMapping A mapping to an external security framework, like MITRE ATT&CK.
type ThreatMapping struct {
	Identifiers []ThreatIdentifier `json:"identifiers"`

	// ReferenceId The name of the external reference (e.g., MITRE-ATT&CK).
	ReferenceId string `json:"referenceId"`
}

// PostV1EnrichJSONRequestBody defines body for PostV1Enrich for application/json ContentType.
type PostV1EnrichJSONRequestBody = EnrichmentRequest
