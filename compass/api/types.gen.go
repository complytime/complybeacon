// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

// Defines values for ComplianceEnrichmentStatus.
const (
	Partial  ComplianceEnrichmentStatus = "partial"
	Success  ComplianceEnrichmentStatus = "success"
	Unknown  ComplianceEnrichmentStatus = "unknown"
	Unmapped ComplianceEnrichmentStatus = "unmapped"
)

// Defines values for ComplianceRiskLevel.
const (
	Critical      ComplianceRiskLevel = "Critical"
	High          ComplianceRiskLevel = "High"
	Informational ComplianceRiskLevel = "Informational"
	Low           ComplianceRiskLevel = "Low"
	Medium        ComplianceRiskLevel = "Medium"
)

// Compliance Compliance metadata including control mappings, framework requirements, and risk assessments. Contains static metadata that can be cached.
type Compliance struct {
	// Control Security control metadata including identification, categorization, and remediation guidance
	Control ComplianceControl `json:"control"`

	// EnrichmentStatus Status of the compliance enrichment process: success, unmapped, partial, or unknown.
	EnrichmentStatus ComplianceEnrichmentStatus `json:"enrichmentStatus"`

	// Frameworks Compliance framework and requirement information
	Frameworks ComplianceFrameworks `json:"frameworks"`

	// Risk Compliance risk assessment information
	Risk *ComplianceRisk `json:"risk,omitempty"`
}

// ComplianceEnrichmentStatus Status of the compliance enrichment process: success, unmapped, partial, or unknown.
type ComplianceEnrichmentStatus string

// ComplianceControl Security control metadata including identification, categorization, and remediation guidance
type ComplianceControl struct {
	// Applicability Environments or contexts where this control applies
	Applicability *[]string `json:"applicability,omitempty"`

	// CatalogId Unique identifier for the security control catalog or framework
	CatalogId string `json:"catalogId"`

	// Category Category or family that the security control belongs to
	Category string `json:"category"`

	// Id Unique identifier for the security control being assessed
	Id string `json:"id"`

	// RemediationDescription Description of the recommended remediation strategy for this control
	RemediationDescription *string `json:"remediationDescription,omitempty"`
}

// ComplianceFrameworks Compliance framework and requirement information
type ComplianceFrameworks struct {
	// Frameworks Regulatory or industry standards being evaluated for compliance
	Frameworks []string `json:"frameworks"`

	// Requirements Compliance requirement identifiers from the frameworks being evaluated
	Requirements []string `json:"requirements"`
}

// ComplianceRisk Compliance risk assessment information
type ComplianceRisk struct {
	// Level Risk level associated with non-compliance
	Level ComplianceRiskLevel `json:"level"`
}

// ComplianceRiskLevel Risk level associated with non-compliance
type ComplianceRiskLevel string

// Error defines model for Error.
type Error struct {
	// Code HTTP status code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`
}

// MetadataRequest Request payload for retrieving compliance metadata for policy evidence
type MetadataRequest struct {
	// Policy Complete evidence log from policy engines and compliance assessment tools
	Policy Policy `json:"policy"`
}

// MetadataResponse Complete compliance metadata including control mappings, frameworks, risk assessment, and dynamic status
type MetadataResponse struct {
	// Compliance Compliance metadata including control mappings, framework requirements, and risk assessments. Contains static metadata that can be cached.
	Compliance Compliance `json:"compliance"`
}

// Policy Complete evidence log from policy engines and compliance assessment tools
type Policy struct {
	// PolicyEngineName Name of the policy engine that performed the evaluation or enforcement action
	PolicyEngineName string `json:"policyEngineName"`

	// PolicyRuleId Unique identifier for the policy rule being evaluated or enforced
	PolicyRuleId string `json:"policyRuleId"`
}

// PostV1MetadataJSONRequestBody defines body for PostV1Metadata for application/json ContentType.
type PostV1MetadataJSONRequestBody = MetadataRequest
